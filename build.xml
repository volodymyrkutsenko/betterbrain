<project name="BetterBrain" default="dist" basedir=".">
	<description>
        Better Brain build file
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="src.test" location="test"/>
	<property name="lib" location="lib"/>
	<property name="build.root" location="build"/>
	<property name="build.dir" location="build/output"/>
	<property name="build.test" location="build/test"/>
	<property name="dist"  location="dist"/>

	<property name="projectname" value="BetterBrain"/>
	<property name="mainclass" value="org.straightweb.betterbrain.main.BetterBrainMain"/>
	<property name="runScriptWindows" value="betterbrain.bat"/>
	<property name="runScriptLinux" value="betterbrain.sh"/>

	<path id="master-classpath">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
		<pathelement path="${build.dir}"/>
	</path>

	<target name="init" depends="clean">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.test}"/>
	</target>

	<target name="compile" depends="init"
        description="compile the source " >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build.dir}" >
			<classpath refid="master-classpath"/>
		</javac>
		<javac srcdir="${src.test}" destdir="${build.test}" >
			<classpath refid="master-classpath"/>
		</javac>
		<copy file="${src}/org/straightweb/betterbrain/memorization/dictionary/analyzing/lemma.num" todir="${build.dir}/org/straightweb/betterbrain/memorization/dictionary/analyzing/"/>
	</target>

	<target name="test" depends="compile">
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes">
			<classpath>
				<pathelement location="${build.test}"/>
				<pathelement location="${build.dir}"/>
				<fileset dir="${lib}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>

			<batchtest fork="yes">
				<fileset dir="${src.test}">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>

			<formatter type="plain" usefile="false"/>
		</junit>
	</target>

	<target name="dist" depends="test"
        description="generate the distribution" >
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}"/>
		
		<copy todir="${dist}/lib">
			<fileset dir="${lib}"/>
		</copy>

		<property name="distJarName" value="${projectname}-${DSTAMP}-${TSTAMP}.jar"/>
		
		<manifestclasspath property="jar.classpath" jarfile="${dist}/${distJarName}">
			<classpath>
				<pathelement location="${dist}/lib"/>
				<fileset dir="${dist}/lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
		</manifestclasspath>	
		
		<jar jarfile="${dist}/${distJarName}" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="${mainclass}"/>
				<attribute name="Class-Path" value="${jar.classpath}"/>
			</manifest>
		</jar>
		
		<echo file="${dist}/${runScriptWindows}">
			@ECHO off
			PATH %PATH%;%JAVA_HOME%\bin\
			FOR /f tokens^=2-5^ delims^=.-_^" %%j IN ('java -fullversion 2^>^&amp;1') DO SET "jver=%%j%%k%%l%%m"

			:: Checking for Java 8 installed before running the application
			IF %jver% LSS 18000 ( 
				ECHO This version of Java is not supported by BetterBrain. The minimal required Java version installed is 1.8.0.
			) ELSE (
				ECHO Generating the equations sheet.
				%JAVA_HOME%\bin\java.exe -jar ${distJarName} --equations --docx --filename 30_equation_sheet.docx > equations_sheet_generation_log.txt
				
				FOR /L %%A IN (1,1,6) DO (
					ECHO Generating the words sheet #%%A.
					%JAVA_HOME%\bin\java.exe -jar ${distJarName} --wordset --filename  words_%%A.txt > wordset_generation_log.txt
				)
				
				ECHO The whole generation process is finished.
			)
		</echo>
		
		<echo file="${dist}/${runScriptLinux}">
			#!/bin/bash
			VER=`java -version 2>&amp;1 | grep "java version" | awk '{print $3}' | tr -d \" | awk '{split($0, array, ".")} END{print array[2]}'`

			# Checking for Java 8 installed before running the application
			if [[ $VER -lt 8 ]]; then
				echo This version of Java is not supported by BetterBrain. The minimal required Java version installed is 1.8.0.
			else 
				echo Generating the equations sheet.
				$JAVA_HOME/bin/java -jar ${distJarName} --equations --docx --filename 30_equation_sheet.docx > equations_sheet_generation_log.txt
				
				for ((i = 1; i &lt; 6; i++)) 
				do
					echo Generating the words sheet $i.
					$JAVA_HOME/bin/java -jar ${distJarName} --wordset --filename words_$i.txt > wordset_generation_log.txt
				done
				
				echo The whole generation process is finished.
			fi
		</echo>
		
		<chmod file="${dist}/${runScriptLinux}" perm="700"/>
	</target>

	<target name="clean"
        description="clean up" >
		<delete dir="${build.root}"/>
		<delete dir="${dist}"/>
	</target>


</project>